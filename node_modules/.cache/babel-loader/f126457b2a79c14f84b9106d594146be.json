{"ast":null,"code":"var _jsxFileName = \"/Users/marcusschnake/Desktop/ElevenFifityProjects/redBadge/finalProject/client-RB-A-Point-Meant/a-point-meant/src/pages/TodoPage.tsx\";\nimport React from 'react';\nimport { Form, FormGroup, Input, Button } from 'reactstrap';\nimport TodoForm from '../components/TodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UpdateTodo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        subject = \"\",\n        todo_item = \"\"\n      } = this.state;\n      const Todo = {\n        subject,\n        todo_item\n      };\n      console.log(Todo);\n    };\n\n    this.UpdateTodo = () => {\n      fetch('http://localhost:3000/todos', {\n        method: 'PUT',\n        body: JSON.stringify({\n          Todo: {\n            subject: this.state.subject,\n            todo_item: this.state.todo_item\n          }\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      }).then(res => res.json()).then(data => console.log(data)).catch(err => console.log(err));\n    };\n\n    this.GetTodo = () => {\n      fetch('http://localhost:3000/todos', {\n        method: 'GET',\n        body: JSON.stringify({\n          Todo: {\n            subject: this.state.subject,\n            todo_item: this.state.todo_item\n          }\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      }).then(res => res.json()).then(data => console.log(data)).catch(err => console.log(err));\n    };\n\n    this.DeleteTodo = () => {\n      fetch('http://localhost:3000/todos', {\n        method: 'DELETE',\n        body: JSON.stringify({\n          Todo: {\n            subject: this.state.subject,\n            todo_item: this.state.todo_item\n          }\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      }).then(res => res.json()).then(data => console.log(data)).catch(err => console.log(err));\n    };\n\n    this.state = {\n      subject: this.props.subject,\n      todo_item: this.props.todo_item\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo's\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n        subject: \"\",\n        todo_item: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"subject\",\n            onChange: e => this.setState({\n              subject: e.target.value\n            }) // value={this.state.subject}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"todo_item\",\n            onChange: e => this.setState({\n              todo_item: e.target.value\n            }) // value={this.state.todo_item}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.UpdateTodo,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default UpdateTodo;","map":{"version":3,"sources":["/Users/marcusschnake/Desktop/ElevenFifityProjects/redBadge/finalProject/client-RB-A-Point-Meant/a-point-meant/src/pages/TodoPage.tsx"],"names":["React","Form","FormGroup","Input","Button","TodoForm","UpdateTodo","Component","constructor","props","handleSubmit","event","preventDefault","subject","todo_item","state","Todo","console","log","fetch","method","body","JSON","stringify","headers","Authorization","localStorage","getItem","then","res","json","data","catch","err","GetTodo","DeleteTodo","render","e","setState","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, FormGroup, Input, Button } from 'reactstrap'\nimport TodoForm from '../components/TodoForm';\n\ntype State = {\n  subject: string,\n  todo_item: string,\n}\n\ninterface IUpdateTodo {\n  subject: string,\n  todo_item: string,\n}\n\n\nclass UpdateTodo extends React.Component<IUpdateTodo, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      subject: this.props.subject,\n      todo_item: this.props.todo_item,  \n    };\n  };\n\n  handleSubmit = (event: any) => {\n    event.preventDefault();\n    const { subject = \"\", todo_item = \"\" } = this.state;\n    const Todo = {\n      subject,\n      todo_item,\n    };\n    console.log(Todo);\n  };\n\n  UpdateTodo = () => {\n    fetch('http://localhost:3000/todos', {\n      method: 'PUT',\n      body: JSON.stringify({\n        Todo: {\n          subject: this.state.subject,\n          todo_item: this.state.todo_item,\n        },\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      }\n    })\n      .then(res => res.json())\n      .then(data => console.log(data))\n      .catch(err => console.log(err));\n  };\n\n\n  GetTodo = () => {\n    fetch('http://localhost:3000/todos', {\n      method: 'GET',\n      body: JSON.stringify({\n        Todo: {\n          subject: this.state.subject,\n          todo_item: this.state.todo_item,\n        },\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      }\n    })\n      .then(res => res.json())\n      .then(data => console.log(data))\n      .catch(err => console.log(err));\n  };\n\n  DeleteTodo = () => {\n    fetch('http://localhost:3000/todos', {\n      method: 'DELETE',\n      body: JSON.stringify({\n        Todo: {\n          subject: this.state.subject,\n          todo_item: this.state.todo_item,\n        },\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      }\n    })\n      .then(res => res.json())\n      .then(data => console.log(data))\n      .catch(err => console.log(err));\n  };\n\n\n\n  render() {\n    return (\n      <div>\n        <h1>Todo's</h1>\n        <TodoForm subject=\"\" todo_item=\"\" />\n        <Form>\n          <FormGroup>\n            <Input\n              type=\"text\"\n              placeholder=\"subject\"\n              onChange={(e) => this.setState({ subject: e.target.value })}\n            // value={this.state.subject}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              type=\"text\"\n              placeholder=\"todo_item\"\n              onChange={(e) => this.setState({ todo_item: e.target.value })}\n              // value={this.state.todo_item}\n            />\n            <Button onClick={this.UpdateTodo}>Update</Button>\n          </FormGroup>\n\n        </Form>\n      </div>\n    );\n  }\n};\n\n\n\n\nexport default UpdateTodo;\n"]},"metadata":{},"sourceType":"module"}