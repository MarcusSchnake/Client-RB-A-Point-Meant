{"ast":null,"code":"var _jsxFileName = \"/Users/marcusschnake/Desktop/ElevenFifityProjects/redBadge/finalProject/client-RB-A-Point-Meant/a-point-meant/src/pages/TodoPage.tsx\";\nimport React from 'react';\nimport { Form, FormGroup, Input } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UpdateAppointment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        client_name,\n        phone_number,\n        startDateTime,\n        note\n      } = this.state;\n      const appointment = {\n        client_name,\n        phone_number,\n        startDateTime,\n        note\n      };\n      console.log(appointment);\n    };\n\n    this.GetAppointments = () => {\n      fetch('http://localhost:3000/appointments', {\n        method: 'GET',\n        body: JSON.stringify({\n          appointments: {\n            client_name: this.state.client_name,\n            phone_number: this.state.phone_number,\n            startDateTime: this.state.startDateTime,\n            note: this.state.note\n          }\n        }),\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Appointment Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AppointmentForm, {\n        client_name: \"MadMarcus\",\n        phone_number: \"\",\n        startDateTime: \"\",\n        note: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Client Name\",\n            onChange: e => this.setState({\n              client_name: e.target.value\n            }),\n            value: this.state.client_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Phone Number\",\n            onChange: e => this.setState({\n              phone_number: e.target.value\n            }),\n            value: this.state.phone_number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Start Date and Time\",\n            onChange: e => this.setState({\n              startDateTime: e.target.value\n            }),\n            value: this.state.startDateTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Note\",\n            onChange: e => this.setState({\n              note: e.target.value\n            }),\n            value: this.state.note\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default UpdateAppointment;","map":{"version":3,"sources":["/Users/marcusschnake/Desktop/ElevenFifityProjects/redBadge/finalProject/client-RB-A-Point-Meant/a-point-meant/src/pages/TodoPage.tsx"],"names":["React","Form","FormGroup","Input","UpdateAppointment","Component","constructor","props","handleSubmit","event","preventDefault","client_name","phone_number","startDateTime","note","state","appointment","console","log","GetAppointments","fetch","method","body","JSON","stringify","appointments","headers","Headers","Authorization","localStorage","getItem","then","response","json","data","render","e","setState","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, FormGroup, Input, Button } from 'reactstrap'\nimport TodoForm from '../components/TodoForm';\n\ntype State = {\n  subject: string,\n  todo_item: string,\n}\n\ninterface IUpdateAppointmentProps {\n    client_name: string,\n    phone_number: string,\n    startDateTime: string,\n    note: string,\n}\n\n\nclass UpdateAppointment extends React.Component<IUpdateAppointmentProps, State> {\n    constructor(props: any) {\n        super(props);\n    }\n\n\n\n\n    handleSubmit = (event: any) => {\n        event.preventDefault();\n        const { client_name, phone_number, startDateTime, note } = this.state;\n        const appointment = {\n            client_name,\n            phone_number,\n            startDateTime,\n            note,\n        };\n        console.log(appointment);\n    };\n\n\n    GetAppointments = () => {\n        fetch('http://localhost:3000/appointments', {\n            method: 'GET',\n            body: JSON.stringify({\n                appointments: {\n                    client_name: this.state.client_name,\n                    phone_number: this.state.phone_number,\n                    startDateTime: this.state.startDateTime,\n                    note: this.state.note,\n                },\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${localStorage.getItem('token')}`,\n            }),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(data);\n            });\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>Appointment Page</h1>\n                <AppointmentForm client_name=\"MadMarcus\" phone_number=\"\" startDateTime=\"\" note=\"\" />\n                <Form>\n                    <FormGroup>\n                        <Input\n                            type=\"text\"\n                            placeholder=\"Client Name\"\n                            onChange={(e) => this.setState({ client_name: e.target.value })}\n                            value={this.state.client_name}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Input\n                            type=\"text\"\n                            placeholder=\"Phone Number\"\n                            onChange={(e) => this.setState({ phone_number: e.target.value })}\n                            value={this.state.phone_number}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Input\n                            type=\"text\"\n                            placeholder=\"Start Date and Time\"\n                            onChange={(e) => this.setState({ startDateTime: e.target.value })}\n                            value={this.state.startDateTime}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Input\n                            type=\"text\"\n                            placeholder=\"Note\"\n                            onChange={(e) => this.setState({ note: e.target.value })}\n                            value={this.state.note}\n                        />\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n    }\n};\n\n\n\n\nexport default UpdateAppointment;"]},"metadata":{},"sourceType":"module"}