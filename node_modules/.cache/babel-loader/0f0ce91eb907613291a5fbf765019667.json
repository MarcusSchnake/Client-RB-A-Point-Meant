{"ast":null,"code":"var _jsxFileName = \"/Users/marcusschnake/Desktop/ElevenFifityProjects/redBadge/finalProject/client-RB-A-Point-Meant/a-point-meant/src/pages/TodoPage.tsx\";\nimport React from 'react';\nimport { Form, FormGroup, Input } from 'reactstrap';\nimport TodoForm from '../components/TodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UpdateTodo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        subject = \"\",\n        todo_item = \"\"\n      } = this.state;\n      const Todo = {\n        subject,\n        todo_item\n      };\n      console.log(Todo);\n    };\n\n    this.UpdateTodo = event => {\n      fetch('http://localhost:3000/todos', {\n        method: 'PUT',\n        body: JSON.stringify({\n          Todo: {\n            subject: this.state.subject,\n            todo_item: this.state.todo_item\n          }\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      }).then(res => res.json()).then(data => console.log(data)).catch(err => console.log(err));\n    };\n\n    this.GetAppointments = () => {\n      fetch('http://localhost:3000/todo', {\n        method: 'GET',\n        body: JSON.stringify({\n          Todo: {\n            subject: this.state.subject,\n            todo_item: this.state.todo_item\n          }\n        }),\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo's\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n        subject: \"\",\n        todo_item: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"subject\",\n            onChange: e => this.setState({\n              subject: e.target.value\n            }),\n            value: this.state.subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"todo_item\",\n            onChange: e => this.setState({\n              todo_item: e.target.value\n            }),\n            value: this.state.todo_item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\n;\nexport default UpdateTodo;","map":{"version":3,"sources":["/Users/marcusschnake/Desktop/ElevenFifityProjects/redBadge/finalProject/client-RB-A-Point-Meant/a-point-meant/src/pages/TodoPage.tsx"],"names":["React","Form","FormGroup","Input","TodoForm","UpdateTodo","Component","constructor","props","handleSubmit","event","preventDefault","subject","todo_item","state","Todo","console","log","fetch","method","body","JSON","stringify","headers","Authorization","localStorage","getItem","then","res","json","data","catch","err","GetAppointments","Headers","response","render","e","setState","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,KAA1B,QAA+C,YAA/C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAaA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAA6D;AAC3DC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;;AADsB,SAOxBC,YAPwB,GAORC,KAAD,IAAgB;AAC7BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEC,QAAAA,OAAO,GAAG,EAAZ;AAAgBC,QAAAA,SAAS,GAAG;AAA5B,UAAmC,KAAKC,KAA9C;AACA,YAAMC,IAAI,GAAG;AACXH,QAAAA,OADW;AAEXC,QAAAA;AAFW,OAAb;AAIAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAfuB;;AAAA,SAiBxBV,UAjBwB,GAiBVK,KAAD,IAAgB;AAC3BQ,MAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,QAAAA,MAAM,EAAE,KAD2B;AAEnCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,UAAAA,IAAI,EAAE;AACJH,YAAAA,OAAO,EAAE,KAAKE,KAAL,CAAWF,OADhB;AAEJC,YAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD;AAFlB;AADa,SAAf,CAF6B;AAQnCU,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFpB;AAR0B,OAAhC,CAAL,CAaGC,IAbH,CAaQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAbf,EAcGF,IAdH,CAcQG,IAAI,IAAId,OAAO,CAACC,GAAR,CAAYa,IAAZ,CAdhB,EAeGC,KAfH,CAeSC,GAAG,IAAIhB,OAAO,CAACC,GAAR,CAAYe,GAAZ,CAfhB;AAgBD,KAlCuB;;AAAA,SAqCxBC,eArCwB,GAqCN,MAAM;AAClBf,MAAAA,KAAK,CAAC,4BAAD,EAA+B;AAClCC,QAAAA,MAAM,EAAE,KAD0B;AAElCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,UAAAA,IAAI,EAAE;AACJH,YAAAA,OAAO,EAAE,KAAKE,KAAL,CAAWF,OADhB;AAEJC,YAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD;AAFlB;AADa,SAAf,CAF4B;AAQlCU,QAAAA,OAAO,EAAE,IAAIW,OAAJ,CAAY;AACnB,0BAAgB,kBADG;AAEnBV,UAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAFpC,SAAZ;AARyB,OAA/B,CAAL,CAaGC,IAbH,CAaSQ,QAAD,IAAcA,QAAQ,CAACN,IAAT,EAbtB,EAcGF,IAdH,CAcSG,IAAD,IAAU;AACdd,QAAAA,OAAO,CAACC,GAAR,CAAYa,IAAZ;AACD,OAhBH;AAiBD,KAvDmB;AAEvB;;AAuDGM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAC,EAAlB;AAAqB,QAAA,SAAS,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD;AAAA,gCACE,QAAC,SAAD;AAAA,iCACE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,SAFd;AAGE,YAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAE1B,cAAAA,OAAO,EAAEyB,CAAC,CAACE,MAAF,CAASC;AAApB,aAAd,CAHnB;AAIE,YAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWF;AAJpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,SAAD;AAAA,iCACE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,WAFd;AAGE,YAAA,QAAQ,EAAGyB,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAEzB,cAAAA,SAAS,EAAEwB,CAAC,CAACE,MAAF,CAASC;AAAtB,aAAd,CAHnB;AAIE,YAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWD;AAJpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AApFsD;;AAqFxD;AAKD,eAAeR,UAAf","sourcesContent":["import React from 'react';\nimport { Form, FormGroup, Input, Button } from 'reactstrap'\nimport TodoForm from '../components/TodoForm';\n\ntype State = {\n  subject: string,\n  todo_item: string,\n}\n\ninterface IUpdateTodo {\n  subject: string,\n  todo_item: string,\n}\n\n\nclass UpdateTodo extends React.Component<IUpdateTodo, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n\n\n\n  handleSubmit = (event: any) => {\n    event.preventDefault();\n    const { subject = \"\", todo_item = \"\" } = this.state;\n    const Todo = {\n      subject,\n      todo_item,\n    };\n    console.log(Todo);\n  };\n\n  UpdateTodo = (event: any) => {\n    fetch('http://localhost:3000/todos', {\n      method: 'PUT',\n      body: JSON.stringify({\n        Todo: {\n          subject: this.state.subject,\n          todo_item: this.state.todo_item,\n        },\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      }\n    })\n      .then(res => res.json())\n      .then(data => console.log(data))\n      .catch(err => console.log(err));\n  };\n\n\n  GetAppointments = () => {\n        fetch('http://localhost:3000/todo', {\n          method: 'GET',\n          body: JSON.stringify({\n            Todo: {\n              subject: this.state.subject,\n              todo_item: this.state.todo_item,\n            },\n          }),\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          }),\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            console.log(data);\n          });\n      };\n\n      render() {\n        return (\n          <div>\n            <h1>Todo's</h1>\n            <TodoForm subject=\"\" todo_item=\"\" />\n            <Form>\n              <FormGroup>\n                <Input\n                  type=\"text\"\n                  placeholder=\"subject\"\n                  onChange={(e) => this.setState({ subject: e.target.value })}\n                  value={this.state.subject}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Input\n                  type=\"text\"\n                  placeholder=\"todo_item\"\n                  onChange={(e) => this.setState({ todo_item: e.target.value })}\n                  value={this.state.todo_item}\n                />\n              </FormGroup>\n\n            </Form>\n          </div>\n        );\n      }\n    };\n\n\n\n\n    export default UpdateTodo;"]},"metadata":{},"sourceType":"module"}