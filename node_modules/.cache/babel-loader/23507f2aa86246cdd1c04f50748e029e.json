{"ast":null,"code":"var _jsxFileName = \"/Users/marcusschnake/Desktop/ElevenFifityProjects/redBadge/finalProject/client-RB-A-Point-Meant/a-point-meant/src/pages/TodoPage.tsx\";\nimport React from 'react';\nimport { Form, FormGroup, Input } from 'reactstrap';\nimport TodoForm from '../components/TodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UpdateTodo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        subject = \"\",\n        todo_item = \"\"\n      } = this.state;\n      const Todo = {\n        subject,\n        todo_item\n      };\n      console.log(Todo);\n    };\n\n    this.GetAppointments = () => {\n      fetch('http://localhost:3000/todo', {\n        method: 'GET',\n        body: JSON.stringify({\n          Todo: {\n            subject: this.state.subject,\n            todo_item: this.state.todo_item\n          }\n        }),\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Appointment Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n        subject: \"\",\n        todo_item: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"subject\",\n            onChange: e => this.setState({\n              subject: e.target.value\n            }),\n            value: this.state.subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Phone Number\",\n            onChange: e => this.setState({\n              todo_: e.target.value\n            }),\n            value: this.state.phone_number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Start Date and Time\",\n            onChange: e => this.setState({\n              startDateTime: e.target.value\n            }),\n            value: this.state.startDateTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Note\",\n            onChange: e => this.setState({\n              note: e.target.value\n            }),\n            value: this.state.note\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default UpdateAppointment;","map":{"version":3,"sources":["/Users/marcusschnake/Desktop/ElevenFifityProjects/redBadge/finalProject/client-RB-A-Point-Meant/a-point-meant/src/pages/TodoPage.tsx"],"names":["React","Form","FormGroup","Input","TodoForm","UpdateTodo","Component","constructor","props","handleSubmit","event","preventDefault","subject","todo_item","state","Todo","console","log","GetAppointments","fetch","method","body","JSON","stringify","headers","Headers","Authorization","localStorage","getItem","then","response","json","data","render","e","setState","target","value","todo_","phone_number","startDateTime","note","UpdateAppointment"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, FormGroup, Input, Button } from 'reactstrap'\nimport TodoForm from '../components/TodoForm';\n\ntype State = {\n  subject: string,\n  todo_item: string,\n}\n\ninterface IUpdateAppointmentProps {\n  subject: string,\n  todo_item: string,\n}\n\n\nclass UpdateTodo extends React.Component<IUpdateAppointmentProps, State> {\n    constructor(props: any) {\n        super(props);\n    }\n\n\n\n\n    handleSubmit = (event: any) => {\n        event.preventDefault();\n        const { subject=\"\", todo_item=\"\" } = this.state;\n        const Todo = {\n          subject,\n          todo_item,\n        };\n        console.log(Todo);\n    };\n\n\n    GetAppointments = () => {\n        fetch('http://localhost:3000/todo', {\n            method: 'GET',\n            body: JSON.stringify({\n                Todo: {\n                    subject: this.state.subject,\n                    todo_item: this.state.todo_item,\n                },\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${localStorage.getItem('token')}`,\n            }),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(data);\n            });\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>Appointment Page</h1>\n                <TodoForm subject=\"\" todo_item=\"\" />\n                <Form>\n                    <FormGroup>\n                        <Input\n                            type=\"text\"\n                            placeholder=\"subject\"\n                            onChange={(e) => this.setState({ subject: e.target.value })}\n                            value={this.state.subject}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Input\n                            type=\"text\"\n                            placeholder=\"Phone Number\"\n                            onChange={(e) => this.setState({ todo_: e.target.value })}\n                            value={this.state.phone_number}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Input\n                            type=\"text\"\n                            placeholder=\"Start Date and Time\"\n                            onChange={(e) => this.setState({ startDateTime: e.target.value })}\n                            value={this.state.startDateTime}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Input\n                            type=\"text\"\n                            placeholder=\"Note\"\n                            onChange={(e) => this.setState({ note: e.target.value })}\n                            value={this.state.note}\n                        />\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n    }\n};\n\n\n\n\nexport default UpdateAppointment;"]},"metadata":{},"sourceType":"module"}