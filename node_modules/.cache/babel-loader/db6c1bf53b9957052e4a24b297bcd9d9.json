{"ast":null,"code":"var _jsxFileName = \"/Users/marcusschnake/Desktop/ElevenFifityProjects/redBadge/finalProject/client-RB-A-Point-Meant/a-point-meant/src/pages/loginPage.tsx\";\nimport LoginForm from '../components/loginForm';\nimport React from \"react\";\nimport { Form, FormGroup, Input, Button } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = () => {\n      console.log(\"login handle\");\n      console.log(this.state.email, this.state.password);\n      fetch(\"http://localhost:5001/users/login\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          users: {\n            email: this.state.email,\n            password: this.state.password\n          }\n        }),\n        headers: new Headers({\n          \"Content-Type\": \"application/json\"\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        console.log(this.props.update);\n        this.props.update(data.sessionToken);\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      sessionToken: \"\"\n    };\n  }\n\n  render() {\n    console.log(\"login render\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => {\n          e.preventDefault();\n          this.handleSubmit();\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          floating: true,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Email\",\n            onChange: e => this.setState({\n              email: e.target.value\n            }),\n            value: this.state.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          floating: true,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            placeholder: \"Password\",\n            onChange: e => this.setState({\n              password: e.target.value\n            }),\n            value: this.state.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default loginPage;\nexport default function LoginPage() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }, this);\n}\n_c = LoginPage;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/marcusschnake/Desktop/ElevenFifityProjects/redBadge/finalProject/client-RB-A-Point-Meant/a-point-meant/src/pages/loginPage.tsx"],"names":["LoginForm","React","Form","FormGroup","Input","Button","Login","Component","constructor","props","handleSubmit","console","log","state","email","password","fetch","method","body","JSON","stringify","users","headers","Headers","then","response","json","data","update","sessionToken","render","e","preventDefault","setState","target","value","loginPage","LoginPage"],"mappings":"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","sourcesContent":["import LoginForm from '../components/loginForm';\n\nimport React from \"react\";\nimport { Form, FormGroup, Input, Button } from \"reactstrap\";\n\ntype Props = {\n  update: any;\n};\n\ntype State = {\n  email: string;\n  password: string;\n  sessionToken: any;\n};\n\nclass Login extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      sessionToken: \"\",\n    };\n  }\n\n  handleSubmit = () => {\n    console.log(\"login handle\");\n    console.log(this.state.email, this.state.password);\n    fetch(\"http://localhost:5001/users/login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        users: {\n          email: this.state.email,\n          password: this.state.password,\n        },\n      }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        console.log(this.props.update);\n        this.props.update(data.sessionToken);\n      });\n  };\n\n  render() {\n    console.log(\"login render\");\n    return (\n      <div>\n        <h3>Login</h3>\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.handleSubmit();\n          }}\n        >\n          <FormGroup floating>\n            <Input\n              type=\"text\"\n              placeholder=\"Email\"\n              onChange={(e) => this.setState({ email: e.target.value })}\n              value={this.state.email}\n            />\n          </FormGroup>\n\n          <FormGroup floating>\n            <Input\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) => this.setState({ password: e.target.value })}\n              value={this.state.password}\n            />\n          </FormGroup>\n          <Button type=\"submit\">Login</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default loginPage;\n\n\nexport default function LoginPage () {\n    return (\n      <div>\n          \n          <LoginForm />\n          \n        \n      </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}